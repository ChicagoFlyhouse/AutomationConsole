<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.7">
  <POU Name="F_LimitTarget" Id="{c0951656-a73d-4dc9-a349-86341241d53c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION F_LimitTarget : DINT //used to translate EtherCAT communication from RAW variables to Kid Variables

VAR_INPUT
	Target : DINT;
END_VAR
VAR
	CorrectedTarget : DINT;
	ho: INT;
	Resulting_Max : DINT;
	Resulting_Min : DINT;
	posi: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
CorrectedTarget := GVL_index.Home_Offset;
CorrectedTarget := KidAxis.actualPos;
CorrectedTarget := KidAxis.HomedPosition_toMom;
CorrectedTarget := Target ;

IF KidAxis.IsUltimateLimitBypassed THEN 
	F_LimitTarget := Target;
	RETURN;
END_IF

IF SetAdminMax THEN GVL_Index.Admin_Max := KidAxis.actualPos; SetAdminMax := FALSE; END_IF
IF SetAdminMin THEN GVL_Index.Admin_Min := KidAxis.actualPos; SetAdminMin := FALSE;END_IF	
IF SetUserMax AND KidAxis.HomedPosition_toMom > GVL_Index.User_Max_UU THEN GVL_Index.User_Max_UU := KidAxis.HomedPosition_toMom; SetUserMax:=FALSE; END_IF
IF SetUserMin AND KidAxis.HomedPosition_toMom > GVL_Index.User_Min_UU THEN GVL_Index.User_Min_UU := KidAxis.HomedPosition_toMom; SetUserMin:= FALSE; END_IF

IF GVL_HMI.BlowOutLimits THEN
	GVL_Index.Admin_Max := 2147483647;
	GVL_Index.Admin_Min := -2147483648;
	GVL_Index.User_Max_UU := 32000;
	GVL_Index.User_Min_UU := -32000;
	GVL_HMI.BlowOutLimits := FALSE;
END_IF

		
//ADMIN LIMITS
 
IF NOT GVL_Index.Direction_Flipped THEN
	IF GVL_Index.Home_Offset + (GVL_Index.User_Min_UU *LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum))< GVL_Index.admin_Min THEN GVL_Index.User_Min_UU := (GVL_Index.Admin_Min -GVL_Index.Home_Offset)/LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum); END_IF
	IF GVL_Index.Home_Offset + (GVL_Index.User_Max_UU *LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum))> GVL_Index.admin_Max THEN GVL_Index.User_Max_UU := (GVL_Index.Admin_Max -GVL_Index.Home_Offset)/LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum); END_IF
	Resulting_Max := GVL_Index.Home_Offset + (GVL_Index.User_Max_UU *LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum));
	Resulting_Min := GVL_Index.Home_Offset + (GVL_Index.User_Min_UU *LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum));
	IF CorrectedTarget > KidAxis.actualPos AND  (NOT GVL_Safe_IO.bLimit_Hard_Up AND NOT GVL_Safe_IO.bHard_Up_Bypass_Enable) THEN CorrectedTarget := KidAxis.actualPos; END_IF
	IF CorrectedTarget < KidAxis.actualPos AND  (NOT GVL_Safe_IO.bLimit_Hard_down AND NOT GVL_Safe_IO.bHard_DOWN_Bypass_Enable) THEN CorrectedTarget := KidAxis.actualPos; END_IF
ELSE
	IF GVL_Index.Home_Offset + (GVL_Index.User_Max_UU *LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum))< GVL_Index.admin_Min THEN GVL_Index.User_Max_UU := (GVL_Index.Admin_Min -GVL_Index.Home_Offset)/LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum); END_IF
	IF GVL_Index.Home_Offset + (GVL_Index.User_Min_UU *LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum))> GVL_Index.admin_Max THEN GVL_Index.User_Min_UU := (GVL_Index.Admin_Max -GVL_Index.Home_Offset)/LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum); END_IF
	Resulting_Min:= GVL_Index.Home_Offset + (GVL_Index.User_Max_UU *LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum));
	Resulting_Max := GVL_Index.Home_Offset + (GVL_Index.User_Min_UU *LREAL_TO_INT(1/ GVL_Motion.lrEncoder_ScalingNum));
	IF CorrectedTarget < KidAxis.actualPos AND  (NOT GVL_Safe_IO.bLimit_Hard_Up AND NOT GVL_Safe_IO.bHard_Up_Bypass_Enable) THEN CorrectedTarget := KidAxis.actualPos; END_IF
	IF CorrectedTarget > KidAxis.actualPos AND  (NOT GVL_Safe_IO.bLimit_Hard_down AND NOT GVL_Safe_IO.bHard_DOWN_Bypass_Enable) THEN CorrectedTarget := KidAxis.actualPos; END_IF
END_IF

IF NOT bLimit_Software_Bypass THEN
	IF CorrectedTarget > Resulting_Max THEN CorrectedTarget := Resulting_Max; END_IF
	IF CorrectedTarget < Resulting_Min THEN CorrectedTarget := Resulting_Min ; END_IF
END_IF

F_LimitTarget := CorrectedTarget;

RETURN ;]]></ST>
    </Implementation>
    <LineIds Name="F_LimitTarget">
      <LineId Id="34" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="47" Count="1" />
      <LineId Id="35" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="133" Count="1" />
      <LineId Id="132" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="138" Count="3" />
      <LineId Id="136" Count="1" />
      <LineId Id="135" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="116" Count="1" />
      <LineId Id="93" Count="1" />
      <LineId Id="18" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="97" Count="1" />
      <LineId Id="67" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>